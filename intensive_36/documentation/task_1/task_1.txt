Задание 1.
    Общие требования:
    - клонировать репозиторий https://github.com/SiarheiYurevich/intensive_36
    - от ветки develop создать ветку task_1_1_name_surname, работать только в своей ветке,
      создать Pull request

1.1 Реализовать свой динамический массив (аналог ArrayList, не потокобезопасный).
    - в пакете task_1_1.impl создать класс IntensiveArrayList_NameSurname,
      имплементирующий интерфейс task_1_1.IntensiveList.
    - реализовать методы интерфейса.
    - код должен быть задокументирован на уровне класса и публичных методов (javadoc).
    - реализация ArrayList, скопированная с java.util не принимается

1.2 Реализовать алгоритм QuickSort.
    - в пакете task_1_2.impl создать класс IntensiveCollections_NameSurname,
      реализовать статический метод quickSort, принимающий и возвращающий интерфейс IntensiveList.
    - использовать Generics, Comparable, Comparator.

1.3 Реализовать алгоритм проверки является ли список отсортированным
    - в пакете task_1_3.impl создать класс IntensiveAssertions_NameSurname,
      реализовать статический метод assertSort, принимающий интерфейс IntensiveList
      и возвращающий boolean (true - список отсортирован, false - не отсортирован).

1.4 Прочитать Грокаем алгоритмы (полностью).

1.5 Изучить иерархию коллекций, сложность операций (big O), реализации ArrayList, LinkedList,
    HashMap, HashSet, TreeSet, понять применение Comparable, Comparator.
1.6 Посмотреть вопросы на https://github.com/Shell26/Java-Developer/blob/master/jcf.md
1.7 Подготовить 10 вопросов по java Collections, big O,структурам данных и git,
    быть готовым дать правильный ответ.

Полезные ссылки:
    - https://habr.com/ru/post/237043/ - коллекции
    - https://habr.com/ru/post/128269/ - лист
    - https://habr.com/ru/post/128017/ - мапа
    - https://www.youtube.com/watch?v=4s-aG6yGGLU - быстрая сортировка
    - https://www.baeldung.com/javadoc